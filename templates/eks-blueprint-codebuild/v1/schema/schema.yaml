schema:
  format:
    openapi: '3.0.0'
  service_input_type: 'ServiceInput'
  types:
    ServiceInput:
      type: object
      description: 'Input properties for eks service.'
      required:
        - iam_platform_user
        - eks_admin_role_name
        - kubernetes_version
        - addon_repo_url
        - workload_repo_url
        - workload_repo_secret
        - workload_repo_revision
        - workload_repo_path
      properties:
        iam_platform_user:
          title: 'iam_platform_user'
          type: string
          description: 'Additional IAM role to be admin in the cluster'
          default: 'platform-user'
        eks_admin_role_name:
          title: 'EKS Admin Additional Role Name'
          type: string
          description: 'IAM Role for cluster access'
          default: 'demo3'
        addon_repo_url:
          title: 'GitHub Addons repo'
          type: string
          description: 'GitHub Repo for managing Kuberbetes Addons'
          default: 'git@github.com:aws-samples/eks-blueprints-add-ons.git'

        workload_repo_url:
          title: 'GitHub ArgoCD Workloads repo'
          type: string
          description: 'GitHub Repo for managing Kuberbetes ArgoCD Workloads'
          default: 'git@github.com:seb-demo/eks-blueprints-workloads.git'

        workload_repo_revision:
          title: 'GitHub ArgoCD Workloads repo revision'
          type: string
          description: 'Git repo revision in workload_repo_url for the ArgoCD workload deployment'
          default: 'working_eks_blue'

        workload_repo_path:
          title: 'GitHub ArgoCD Workloads repo path'
          type: string
          description: 'GitHub path in the Repo for managing Kuberbetes ArgoCD Workloads'
          default: 'envs/dev'

        workload_repo_secret:
          title: 'GitHub ArgoCD Workloads repo secret'
          type: string
          description: 'Secret Manager secret name for hosting Github SSH-Key to Access private repository'
          default: 'github-blueprint-ssh-key'

        argocd_route53_weight:
          title: 'Route 53 Weight for ArgoCD'
          type: string
          description: 'Weight for the Route 53 weighted record for the ArgoCD UI'
          default: '100'

        ecsfrontend_route53_weight:
          title: 'Route 53 Weight for the ecsdemo applications'
          type: string
          description: 'Weight for the Route 53 weighted record for ecsdemo applications'
          default: '100'

        route53_weight:
          title: 'Route 53 Weight for other applications'
          type: string
          description: 'Weight for the Route 53 weighted record for others applications'
          default: '100'


        kubernetes_version:
          title: 'Kubernetes version'
          type: string
          enum: ['1.22', '1.23', '1.24', '1.25']
          default: '1.24'

        aws_load_balancer_controller:
          title: 'Enable AWS Load Balancer Controller Add-On'
          type: boolean
          default: true
        metrics_server:
          title: 'Enable Metrics Server Add-On'
          type: boolean
          default: true
        aws_for_fluentbit:
          title: 'Enable AWS for FluentBit Add-On'
          type: boolean
          default: true
        cert_manager:
          title: 'Enable Cert Manager Add-On'
          type: boolean
          default: true
        vpa:
          title: 'Enable VPA Add-On'
          type: boolean
          default: true
        karpenter:
          title: 'Enable Karpenter Add-On'
          type: boolean
          default: true
        external_dns:
          title: 'Enable External DNS'
          type: boolean
          default: true
        kubecost:
          title: 'Enable Kubecost'
          type: boolean
          default: true
        argo_rollouts:
          title: 'Enable Argo Rollouts'
          type: boolean
          default: true
        cloudwatch_metrics:
          title: 'Enable Container Insights'
          type: boolean
          default: true
